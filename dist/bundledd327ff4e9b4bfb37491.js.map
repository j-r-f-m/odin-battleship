{"version":3,"file":"bundledd327ff4e9b4bfb37491.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA,23BAA23B,gBAAgB,iBAAiB,gBAAgB,sBAAsB,oBAAoB,+BAA+B,KAAK,gLAAgL,qBAAqB,KAAK,UAAU,qBAAqB,KAAK,eAAe,uBAAuB,KAAK,sBAAsB,mBAAmB,KAAK,qEAAqE,oBAAoB,oBAAoB,KAAK,WAAW,gCAAgC,wBAAwB,KAAK,gOAAgO,oBAAoB,oBAAoB,wDAAwD,sDAAsD,KAAK,8DAA8D,oBAAoB,oBAAoB,wDAAwD,sDAAsD,KAAK,qGAAqG,0BAA0B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,sBAAsB,0BAA0B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,oBAAoB,yBAAyB,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,gHAAgH,0BAA0B,uBAAuB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,gCAAgC,yBAAyB,sBAAsB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,gCAAgC,yBAAyB,uBAAuB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,4BAA4B,0BAA0B,uBAAuB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,6CAA6C,kCAAkC,KAAK,kBAAkB,yBAAyB,sBAAsB,wBAAwB,uDAAuD,sDAAsD,sCAAsC,kCAAkC,KAAK,6BAA6B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,sBAAsB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,2BAA2B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,oBAAoB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,2BAA2B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,oBAAoB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,4BAA4B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,qBAAqB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,yBAAyB,yBAAyB,6BAA6B,uBAAuB,wBAAwB,8BAA8B,0BAA0B,KAAK,kBAAkB,yBAAyB,6BAA6B,wBAAwB,kCAAkC,KAAK,qBAAqB,yBAAyB,uBAAuB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,oBAAoB,yBAAyB,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,yBAAyB,0BAA0B,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,qBAAqB,yBAAyB,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,qBAAqB,2BAA2B,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,eAAe,8BAA8B,KAAK,oHAAoH,yBAAyB,sBAAsB,sCAAsC,wBAAwB,8BAA8B,0BAA0B,KAAK,wBAAwB,2BAA2B,sBAAsB,sCAAsC,wBAAwB,8BAA8B,0BAA0B,KAAK,WAAW,mFAAmF,MAAM,qFAAqF,WAAW,UAAU,UAAU,UAAU,UAAU,YAAY,MAAM,YAAY,gBAAgB,UAAU,MAAM,KAAK,UAAU,MAAM,MAAM,YAAY,MAAM,MAAM,UAAU,KAAK,QAAQ,UAAU,UAAU,KAAK,KAAK,YAAY,aAAa,MAAM,aAAa,cAAc,aAAa,MAAM,UAAU,UAAU,YAAY,aAAa,OAAO,YAAY,MAAM,UAAU,UAAU,YAAY,aAAa,OAAO,YAAY,MAAM,YAAY,YAAY,UAAU,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,YAAY,UAAU,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,aAAa,OAAO,aAAa,MAAM,YAAY,cAAc,WAAW,YAAY,cAAc,WAAW,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,YAAY,UAAU,YAAY,cAAc,WAAW,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,WAAW,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,WAAW,WAAW,YAAY,aAAa,OAAO,OAAO,YAAY,OAAO,KAAK,YAAY,YAAY,UAAU,YAAY,cAAc,aAAa,aAAa,OAAO,KAAK,aAAa,aAAa,YAAY,UAAU,YAAY,aAAa,OAAO,KAAK,aAAa,aAAa,YAAY,YAAY,OAAO,KAAK,aAAa,aAAa,YAAY,UAAU,YAAY,aAAa,OAAO,KAAK,aAAa,aAAa,YAAY,YAAY,OAAO,KAAK,aAAa,aAAa,YAAY,UAAU,YAAY,aAAa,OAAO,KAAK,aAAa,aAAa,YAAY,YAAY,OAAO,KAAK,aAAa,aAAa,YAAY,UAAU,YAAY,aAAa,OAAO,KAAK,aAAa,aAAa,YAAY,YAAY,OAAO,KAAK,aAAa,aAAa,cAAc,WAAW,YAAY,aAAa,OAAO,KAAK,aAAa,aAAa,cAAc,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,cAAc,WAAW,YAAY,cAAc,aAAa,OAAO,KAAK,YAAY,OAAO,aAAa,MAAM,YAAY,YAAY,aAAa,WAAW,YAAY,aAAa,OAAO,KAAK,YAAY,YAAY,aAAa,WAAW,YAAY,aAAa,22BAA22B,gBAAgB,iBAAiB,gBAAgB,sBAAsB,oBAAoB,+BAA+B,KAAK,gLAAgL,qBAAqB,KAAK,UAAU,qBAAqB,KAAK,eAAe,uBAAuB,KAAK,sBAAsB,mBAAmB,KAAK,qEAAqE,oBAAoB,oBAAoB,KAAK,WAAW,gCAAgC,wBAAwB,KAAK,gOAAgO,oBAAoB,oBAAoB,wDAAwD,sDAAsD,KAAK,8DAA8D,oBAAoB,oBAAoB,wDAAwD,sDAAsD,KAAK,qGAAqG,0BAA0B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,sBAAsB,0BAA0B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,oBAAoB,yBAAyB,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,gHAAgH,0BAA0B,uBAAuB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,gCAAgC,yBAAyB,sBAAsB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,gCAAgC,yBAAyB,uBAAuB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,4BAA4B,0BAA0B,uBAAuB,wBAAwB,wDAAwD,sDAAsD,0BAA0B,mBAAmB,sCAAsC,kCAAkC,KAAK,6CAA6C,kCAAkC,KAAK,kBAAkB,yBAAyB,sBAAsB,wBAAwB,uDAAuD,sDAAsD,sCAAsC,kCAAkC,KAAK,6BAA6B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,sBAAsB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,2BAA2B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,oBAAoB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,2BAA2B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,oBAAoB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,4BAA4B,yBAAyB,6BAA6B,sBAAsB,wBAAwB,8BAA8B,0BAA0B,KAAK,qBAAqB,yBAAyB,6BAA6B,sBAAsB,kCAAkC,KAAK,yBAAyB,yBAAyB,6BAA6B,uBAAuB,wBAAwB,8BAA8B,0BAA0B,KAAK,kBAAkB,yBAAyB,6BAA6B,wBAAwB,kCAAkC,KAAK,qBAAqB,yBAAyB,uBAAuB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,oBAAoB,yBAAyB,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,yBAAyB,0BAA0B,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,qBAAqB,yBAAyB,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,qBAAqB,2BAA2B,wBAAwB,wBAAwB,8BAA8B,0BAA0B,sCAAsC,KAAK,eAAe,8BAA8B,KAAK,oHAAoH,yBAAyB,sBAAsB,sCAAsC,wBAAwB,8BAA8B,0BAA0B,KAAK,wBAAwB,2BAA2B,sBAAsB,sCAAsC,wBAAwB,8BAA8B,0BAA0B,KAAK,uBAAuB;AACh1jB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;ACP1B;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpFa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA,MAA+F;AAC/F,MAAqF;AACrF,MAA4F;AAC5F,MAA+G;AAC/G,MAAwG;AACxG,MAAwG;AACxG,MAAoG;AACpG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,uFAAO;;;;AAI8C;AACtE,OAAO,iEAAe,uFAAO,IAAI,8FAAc,GAAG,8FAAc,YAAY,EAAC;;;;;;;;;;;AC1BhE;;AAEb;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;ACfsC;AAKhB;AACtB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,0BAA0B,eAAe,IAAI,eAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA,0BAA0B,eAAe,IAAI,eAAe;AAC5D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oBAAoB,qBAAqB;AACzC;AACA,4BAA4B,eAAe,IAAI,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA,WAAW,eAAe,IAAI,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,0BAA0B,eAAe,IAAI,eAAe;AAC5D;AACA;AACA,+CAA+C,wDAAe;AAC9D,+CAA+C,8DAAqB;AACpE,0CAA0C,uDAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gEAA4B;AAClC;AACA,IAAI,SAAS,gEAA4B;AACzC;AACA,IAAI,SAAS,gEAA4B;AACzC;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,gEAA4B;AACzC;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,wDAAe;AAC7D,8CAA8C,8DAAqB;AACnE,yCAAyC,uDAAc;AACvD;AACA;AACA;AACA;AAYE;;;;;;;;;;;;;;;;AC1RyB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAkD;AACxD,MAAM,+CAA+C;AACrD,MAAM,+CAA+C;AACrD,MAAM,iDAAiD;AACvD,MAAM,8CAA8C;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAkD;AAC1D,QAAQ,+CAA+C;AACvD,QAAQ,+CAA+C;AACvD,QAAQ,iDAAiD;AACzD,QAAQ,8CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA,oBAAoB,MAAM,GAAG,MAAM,GAAG,UAAU,GAAG,MAAM;AACzD,SAAS;AACT,oBAAoB,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM,GAAG,MAAM;AACvC;AACA;AACA;AACA;AACA,wBAAwB,UAAU,GAAG,MAAM;AAC3C;AACA;AACA;AACA;AACA,wBAAwB,UAAU,GAAG,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM,GAAG,MAAM;AACvC;AACA;AACA;AACA;AACA,wBAAwB,MAAM,GAAG,UAAU;AAC3C;AACA;AACA;AACA;AACA,wBAAwB,MAAM,GAAG,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrgBsB;AACkB;AACI;AACR;AACU;AAC9C;AACA;AACA;AACA,wBAAwB,kDAAS;AACjC;AACA,oBAAoB,kDAAS;AAC7B;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAW;AACX;AACA,kBAAkB;AAClB;AACA;AACA;AACgC;;;;;;;;;;;;;;;;;;AC3BS;AACmB;AAChB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0CAAW;AACzB,cAAc,sCAAO;AACrB;AACA;AACA,2BAA2B,mDAAO;AAClC;AACA;AACA,qBAAqB,mDAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mDAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAO;AAC1B,sBAAsB,mDAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,oBAAoB,QAAQ;AAC5B,qBAAqB,uDAAW;AAChC,2BAA2B,UAAU;AACrC;AACA,YAAY,SAAS,GAAG,EAAE,GAAG,SAAS,GAAG,EAAE;AAC3C,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,oBAAoB,QAAQ;AAC5B,qBAAqB,uDAAW;AAChC,2BAA2B,UAAU;AACrC;AACA,YAAY,SAAS,GAAG,EAAE,GAAG,SAAS,GAAG,EAAE;AAC3C,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAqB;AACjC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,gBAAgB,mDAAO;AACvB;AACA;AACA,gBAAgB,mDAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAa;AACnB,MAAM,yDAA0B;AAChC,MAAM,4DAA6B;AACnC,MAAM,kDAAmB,GAAG,sDAAuB,IAAI;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB,KAAK,gBAAgB;AAC7D;AACA,cAAc,wDAAyB;AACvC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,gBAAgB,mDAAO;AACvB;AACA;AACA,gBAAgB,mDAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,0DAAa;AACnB,MAAM,yDAA0B;AAChC,MAAM,4DAA6B;AACnC,MAAM,kDAAmB,GAAG,sDAAuB,IAAI;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAuB;AAChD;AACA,kBAAkB,2BAA2B;AAC7C,wBAAwB,sDAAuB;AAC/C;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA,6BAA6B,kBAAkB,KAAK,kBAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA,6BAA6B,kBAAkB,KAAK,kBAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;;AC/OT;AACiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAO;AACzB;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B,oBAAoB,QAAQ;AAC5B,qBAAqB,mDAAO,gCAAgC,EAAE,IAAI,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAO;AAC1B;AACA;AACA;AACA,uBAAuB,wEAAoC;AAC3D;AACA,4BAA4B,0DAAc;AAC1C;AACA;AACA;AACA;AACA,EAAE,4DAAgB,WAAW,wEAAoC;AACjE;AACA;AACA,EAAE,0DAAsB;AACxB;AACA;AACA,EAAE,iEAAqB;AACvB;AACA,8BAA8B,qEAAiC;AAC/D;AACA;AACA;AACA,EAAE,0DAAc;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAO;AAC1B;AACA,mBAAmB,yDAAqB;AACxC;AACA,IAAI,wEAAoC;AACxC;AACA,EAAE,4DAAgB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAO;AAC1B;AACA;AACA;AACA,mBAAmB,yDAAqB;AACxC;AACA,IAAI,wEAAoC;AACxC;AACA;AACA;AACA;AACA;AACA,EAAE,0DAAc;AAChB;AACA;AACwE;;;;;;;;;;;;;;;;;;;;;ACrGlC;AACF;AACE;AACG;AACL;AACU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mDAAO;AAClC;AACA;AACA,EAAE,iDAAI;AACN;AACA;AACA,EAAE,0DAAU;AACZ;AACA;AACA,oBAAoB,mDAAO;AAC3B;AACA;AACA;AACA,IAAI,sEAAkC;AACtC,gBAAgB,+CAAW;AAC3B,GAAG;AACH;AACA;AACA,mBAAmB,mDAAO;AAC1B;AACA;AACA;AACA;AACA,IAAI,8DAA0B;AAC9B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,mDAAO;AAC3B;AACA;AACA;AACA,QAAQ,kEAA8B;AACtC;AACA;AACA;AACA,MAAM,2DAAc;AACpB;AACA,GAAG;AACH;AACA;AACA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;AC3DS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mDAAO;AACzB;AACA;AACA,2BAA2B,mDAAO;AAClC;AACA,qBAAqB,mDAAO;AAC5B;AACA,yBAAyB,mDAAO;AAChC;AACA,mBAAmB,mDAAO;AAC1B;AACA,yBAAyB,mDAAO;AAChC;AACA,mBAAmB,mDAAO;AAC1B;AACA,2BAA2B,mDAAO;AAClC;AACA,qBAAqB,mDAAO;AAC5B;AACA,wBAAwB,mDAAO;AAC/B;AACA,kBAAkB,mDAAO;AACzB;AACA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;AC/BY;AACM;AACR;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mDAAO;AAClC;AACA,iBAAiB,mDAAO;AACxB;AACA;AACA;AACA,2BAA2B,mDAAO;AAClC;AACA;AACA,mBAAmB,mDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAa;AACjB,GAAG;AACH;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;AC7Ba;AACxC;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI,EAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCnDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;;;;UEAA;UACA;UACA;UACA","sources":["webpack://odin-battleship/./src/styles.css","webpack://odin-battleship/./node_modules/css-loader/dist/runtime/api.js","webpack://odin-battleship/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://odin-battleship/./src/styles.css?44b2","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://odin-battleship/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://odin-battleship/./src/domHelper.js","webpack://odin-battleship/./src/gameboard.js","webpack://odin-battleship/./src/index.js","webpack://odin-battleship/./src/screenGameplay.js","webpack://odin-battleship/./src/screenGrid.js","webpack://odin-battleship/./src/screenPlacing.js","webpack://odin-battleship/./src/screenSidebar.js","webpack://odin-battleship/./src/screenStart.js","webpack://odin-battleship/./src/ships.js","webpack://odin-battleship/webpack/bootstrap","webpack://odin-battleship/webpack/runtime/compat get default export","webpack://odin-battleship/webpack/runtime/define property getters","webpack://odin-battleship/webpack/runtime/hasOwnProperty shorthand","webpack://odin-battleship/webpack/runtime/make namespace object","webpack://odin-battleship/webpack/runtime/nonce","webpack://odin-battleship/webpack/before-startup","webpack://odin-battleship/webpack/startup","webpack://odin-battleship/webpack/after-startup"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* http://meyerweb.com/eric/tools/css/reset/ \\r\\n   v2.0 | 20110126\\r\\n   License: none (public domain)\\r\\n*/\\r\\n\\r\\nhtml,\\r\\nbody,\\r\\ndiv,\\r\\nspan,\\r\\napplet,\\r\\nobject,\\r\\niframe,\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4,\\r\\nh5,\\r\\nh6,\\r\\np,\\r\\nblockquote,\\r\\npre,\\r\\na,\\r\\nabbr,\\r\\nacronym,\\r\\naddress,\\r\\nbig,\\r\\ncite,\\r\\ncode,\\r\\ndel,\\r\\ndfn,\\r\\nem,\\r\\nimg,\\r\\nins,\\r\\nkbd,\\r\\nq,\\r\\ns,\\r\\nsamp,\\r\\nsmall,\\r\\nstrike,\\r\\nstrong,\\r\\nsub,\\r\\nsup,\\r\\ntt,\\r\\nvar,\\r\\nb,\\r\\nu,\\r\\ni,\\r\\ncenter,\\r\\ndl,\\r\\ndt,\\r\\ndd,\\r\\nol,\\r\\nul,\\r\\nli,\\r\\nfieldset,\\r\\nform,\\r\\nlabel,\\r\\nlegend,\\r\\ntable,\\r\\ncaption,\\r\\ntbody,\\r\\ntfoot,\\r\\nthead,\\r\\ntr,\\r\\nth,\\r\\ntd,\\r\\narticle,\\r\\naside,\\r\\ncanvas,\\r\\ndetails,\\r\\nembed,\\r\\nfigure,\\r\\nfigcaption,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\noutput,\\r\\nruby,\\r\\nsection,\\r\\nsummary,\\r\\ntime,\\r\\nmark,\\r\\naudio,\\r\\nvideo {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  font-size: 100%;\\r\\n  font: inherit;\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n/* HTML5 display-role reset for older browsers */\\r\\narticle,\\r\\naside,\\r\\ndetails,\\r\\nfigcaption,\\r\\nfigure,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\nsection {\\r\\n  display: block;\\r\\n}\\r\\nbody {\\r\\n  line-height: 1;\\r\\n}\\r\\nol,\\r\\nul {\\r\\n  list-style: none;\\r\\n}\\r\\nblockquote,\\r\\nq {\\r\\n  quotes: none;\\r\\n}\\r\\nblockquote:before,\\r\\nblockquote:after,\\r\\nq:before,\\r\\nq:after {\\r\\n  content: \\\"\\\";\\r\\n  content: none;\\r\\n}\\r\\ntable {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\r\\n}\\r\\n/* -------------------------------------------------------------------------- */\\r\\n\\r\\n/* ---------------------------- layout -------------------------------------- */\\r\\n\\r\\n/* layout for placing phase */\\r\\n.content {\\r\\n  height: 100vh;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(12, [col-start]1fr);\\r\\n  grid-template-rows: repeat(12, [row-start] 1fr);\\r\\n}\\r\\n\\r\\n/* layout for gameplay phase */\\r\\n.content-gameplay {\\r\\n  height: 100vh;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(15, [col-start]1fr);\\r\\n  grid-template-rows: repeat(12, [row-start] 1fr);\\r\\n}\\r\\n\\r\\n/* -------------------------- starting screen ------------------------------- */\\r\\n.header {\\r\\n  grid-column: 3 / 11;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.adversaries {\\r\\n  grid-column: 3 / 11;\\r\\n  grid-row: 5 / 7;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-start {\\r\\n  grid-column: 6 / 8;\\r\\n  grid-row: 10 / 11;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n/* ------------------------------- placing screen -------------------------- */\\r\\n\\r\\n.grid-container {\\r\\n  grid-column: 5 / 12;\\r\\n  grid-row: 3 / 10;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.grid-container-player {\\r\\n  grid-column: 2 / 8;\\r\\n  grid-row: 3 / 9;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.grid-container-player {\\r\\n  grid-column: 2 / 8;\\r\\n  grid-row: 4 / 10;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.grid-container-ai {\\r\\n  grid-column: 9 / 15;\\r\\n  grid-row: 4 / 10;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.tile,\\r\\n.tile-player,\\r\\n.tile-ai {\\r\\n  background-color: lightblue;\\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n  grid-column: 2 / 4;\\r\\n  grid-row: 3 / 8;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(5, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  background-color: lightgray;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.patrol-boat-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 1 / 2;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.patrol-boat {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 3;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.cruiser-1-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 3 / 4;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.cruiser-1 {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 4;\\r\\n  grid-row: 4 / 5;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.cruiser-2-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 5 / 6;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.cruiser-2 {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 4;\\r\\n  grid-row: 6 / 7;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.battleship-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 7 / 8;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.battleship {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 5;\\r\\n  grid-row: 8 / 9;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.carrier-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 9 / 10;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.carrier {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 10 / 11;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.btn-rotate {\\r\\n  grid-column: 2 / 4;\\r\\n  grid-row: 9 / 10;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-reset {\\r\\n  grid-column: 5 / 8;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-start-game {\\r\\n  grid-column: 9 / 12;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-winner {\\r\\n  grid-column: 3 / 7;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-replay {\\r\\n  grid-column: 10 / 14;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.ship {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n/* ------------------------------- playing screen --------------------------- */\\r\\n\\r\\n.player-name-plate {\\r\\n  grid-column: 3 / 7;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.ai-name-plate {\\r\\n  grid-column: 10 / 14;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* http://meyerweb.com/eric/tools/css/reset/ \\r\\n   v2.0 | 20110126\\r\\n   License: none (public domain)\\r\\n*/\\r\\n\\r\\nhtml,\\r\\nbody,\\r\\ndiv,\\r\\nspan,\\r\\napplet,\\r\\nobject,\\r\\niframe,\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4,\\r\\nh5,\\r\\nh6,\\r\\np,\\r\\nblockquote,\\r\\npre,\\r\\na,\\r\\nabbr,\\r\\nacronym,\\r\\naddress,\\r\\nbig,\\r\\ncite,\\r\\ncode,\\r\\ndel,\\r\\ndfn,\\r\\nem,\\r\\nimg,\\r\\nins,\\r\\nkbd,\\r\\nq,\\r\\ns,\\r\\nsamp,\\r\\nsmall,\\r\\nstrike,\\r\\nstrong,\\r\\nsub,\\r\\nsup,\\r\\ntt,\\r\\nvar,\\r\\nb,\\r\\nu,\\r\\ni,\\r\\ncenter,\\r\\ndl,\\r\\ndt,\\r\\ndd,\\r\\nol,\\r\\nul,\\r\\nli,\\r\\nfieldset,\\r\\nform,\\r\\nlabel,\\r\\nlegend,\\r\\ntable,\\r\\ncaption,\\r\\ntbody,\\r\\ntfoot,\\r\\nthead,\\r\\ntr,\\r\\nth,\\r\\ntd,\\r\\narticle,\\r\\naside,\\r\\ncanvas,\\r\\ndetails,\\r\\nembed,\\r\\nfigure,\\r\\nfigcaption,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\noutput,\\r\\nruby,\\r\\nsection,\\r\\nsummary,\\r\\ntime,\\r\\nmark,\\r\\naudio,\\r\\nvideo {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  border: 0;\\r\\n  font-size: 100%;\\r\\n  font: inherit;\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n/* HTML5 display-role reset for older browsers */\\r\\narticle,\\r\\naside,\\r\\ndetails,\\r\\nfigcaption,\\r\\nfigure,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\nsection {\\r\\n  display: block;\\r\\n}\\r\\nbody {\\r\\n  line-height: 1;\\r\\n}\\r\\nol,\\r\\nul {\\r\\n  list-style: none;\\r\\n}\\r\\nblockquote,\\r\\nq {\\r\\n  quotes: none;\\r\\n}\\r\\nblockquote:before,\\r\\nblockquote:after,\\r\\nq:before,\\r\\nq:after {\\r\\n  content: \\\"\\\";\\r\\n  content: none;\\r\\n}\\r\\ntable {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\r\\n}\\r\\n/* -------------------------------------------------------------------------- */\\r\\n\\r\\n/* ---------------------------- layout -------------------------------------- */\\r\\n\\r\\n/* layout for placing phase */\\r\\n.content {\\r\\n  height: 100vh;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(12, [col-start]1fr);\\r\\n  grid-template-rows: repeat(12, [row-start] 1fr);\\r\\n}\\r\\n\\r\\n/* layout for gameplay phase */\\r\\n.content-gameplay {\\r\\n  height: 100vh;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(15, [col-start]1fr);\\r\\n  grid-template-rows: repeat(12, [row-start] 1fr);\\r\\n}\\r\\n\\r\\n/* -------------------------- starting screen ------------------------------- */\\r\\n.header {\\r\\n  grid-column: 3 / 11;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.adversaries {\\r\\n  grid-column: 3 / 11;\\r\\n  grid-row: 5 / 7;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-start {\\r\\n  grid-column: 6 / 8;\\r\\n  grid-row: 10 / 11;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n/* ------------------------------- placing screen -------------------------- */\\r\\n\\r\\n.grid-container {\\r\\n  grid-column: 5 / 12;\\r\\n  grid-row: 3 / 10;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.grid-container-player {\\r\\n  grid-column: 2 / 8;\\r\\n  grid-row: 3 / 9;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.grid-container-player {\\r\\n  grid-column: 2 / 8;\\r\\n  grid-row: 4 / 10;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.grid-container-ai {\\r\\n  grid-column: 9 / 15;\\r\\n  grid-row: 4 / 10;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  column-gap: 5px;\\r\\n  row-gap: 5px;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.tile,\\r\\n.tile-player,\\r\\n.tile-ai {\\r\\n  background-color: lightblue;\\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n  grid-column: 2 / 4;\\r\\n  grid-row: 3 / 8;\\r\\n\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(5, [col-start]1fr);\\r\\n  grid-template-rows: repeat(10, [row-start] 1fr);\\r\\n\\r\\n  background-color: lightgray;\\r\\n  border: 5px solid lightgray;\\r\\n}\\r\\n\\r\\n.patrol-boat-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 1 / 2;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.patrol-boat {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 3;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.cruiser-1-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 3 / 4;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.cruiser-1 {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 4;\\r\\n  grid-row: 4 / 5;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.cruiser-2-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 5 / 6;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.cruiser-2 {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 4;\\r\\n  grid-row: 6 / 7;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.battleship-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 7 / 8;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.battleship {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 5;\\r\\n  grid-row: 8 / 9;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.carrier-header {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 9 / 10;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.carrier {\\r\\n  text-align: center;\\r\\n\\r\\n  grid-column: 1 / 6;\\r\\n  grid-row: 10 / 11;\\r\\n\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.btn-rotate {\\r\\n  grid-column: 2 / 4;\\r\\n  grid-row: 9 / 10;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-reset {\\r\\n  grid-column: 5 / 8;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-start-game {\\r\\n  grid-column: 9 / 12;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-winner {\\r\\n  grid-column: 3 / 7;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.btn-replay {\\r\\n  grid-column: 10 / 14;\\r\\n  grid-row: 11 / 12;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n\\r\\n  background-color: lightgray;\\r\\n}\\r\\n\\r\\n.ship {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n/* ------------------------------- playing screen --------------------------- */\\r\\n\\r\\n.player-name-plate {\\r\\n  grid-column: 3 / 7;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.ai-name-plate {\\r\\n  grid-column: 10 / 14;\\r\\n  grid-row: 2 / 3;\\r\\n\\r\\n  background-color: lightgrey;\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","import { playerBoard } from \"./index\";\r\nimport {\r\n  eventProjection,\r\n  eventDeleteProjection,\r\n  eventPlaceShip,\r\n} from \"./screenGrid\";\r\n\r\n/**\r\n * select a parent dom-element create a dom-element and append the created\r\n * element\r\n * @param {string} parent select parent using css selector\r\n * @param {string} typeOfEle type of dom element\r\n * @param {string} nameClass class name\r\n * @param {string} txt text contetn\r\n *\r\n */\r\nconst crtNode = (parent, typeOfEle, nameClass, txt) => {\r\n  // select parent\r\n  const parentEle = document.querySelector(parent);\r\n  // create element\r\n  const crtEle = document.createElement(typeOfEle);\r\n  crtEle.className = nameClass;\r\n  //   crtEle.textContent = txt;\r\n  // append created element\r\n  parentEle.appendChild(crtEle);\r\n  return crtEle;\r\n};\r\n\r\n/**\r\n * create a grid tile\r\n * @param {string} parent select parent using css selector\r\n * @param {string} typeOfEle type of dom element\r\n * @param {string} nameId id name\r\n * @param {string} nameClass class name\r\n * @returns created dom element\r\n */\r\nconst crtTile = (parent, typeOfEle, nameId, nameClass) => {\r\n  // select parent\r\n  const parentEle = document.querySelector(parent);\r\n  // create element\r\n  const crtEle = document.createElement(typeOfEle);\r\n  crtEle.setAttribute(\"id\", nameId);\r\n  crtEle.className = nameClass;\r\n  //   crtEle.className = coorClass;\r\n\r\n  // append created element\r\n  parentEle.appendChild(crtEle);\r\n  return crtEle;\r\n};\r\n\r\n/**\r\n * create a grid tile with class for screenGameplay phase\r\n * @param {string} parent select parent using css selector\r\n * @param {string} typeOfEle type of dom element\r\n * @param {string} nameId id name\r\n * @param {string} nameClass class name\r\n * @returns created dom element\r\n */\r\nconst crtTileGame = (parent, typeOfEle, nameId, nameClass) => {\r\n  // select parent\r\n  const parentEle = document.querySelector(parent);\r\n  // create element\r\n  const crtEle = document.createElement(typeOfEle);\r\n  // crtEle.setAttribute(\"class\", nameId);\r\n  // crtEle.className = nameClass;\r\n  crtEle.classList.add(nameId);\r\n  crtEle.classList.add(nameClass);\r\n  //   crtEle.className = coorClass;\r\n\r\n  // append created element\r\n  parentEle.appendChild(crtEle);\r\n  return crtEle;\r\n};\r\n\r\n/**\r\n * extract x-y-coordinates from id-string of a tile\r\n * @param {string} string get a string containing the x-y-coordinates of a tile\r\n * @returns array [x,y]\r\n */\r\nconst getCoor = (string) => {\r\n  return [parseInt(string[2]), parseInt(string[5])];\r\n};\r\n\r\n/**\r\n *show possible location of ship if mouse hover over a tile\r\n * @param {array} shipCoor array with x-y-coordinates of possible ship location\r\n */\r\nconst projectingShip = (shipCoor) => {\r\n  // ship coordinates containing illegal moves -> moves outside of board\r\n  if (shipCoor === false) {\r\n    //console.log(false);\r\n    return;\r\n  }\r\n\r\n  for (let i = 0; i < shipCoor.length; i++) {\r\n    //console.log(\"loop\");\r\n    // turn current [x,y] array into a string containing the coordinates\r\n    let stringHelp = `x:${shipCoor[i][0]}y:${shipCoor[i][1]}`;\r\n    // give tile id with created string\r\n    let currTile = document.getElementById(stringHelp);\r\n    // console.log(currTile.classList);\r\n    if (currTile.classList.contains(\"ship\")) {\r\n      //\r\n    } else {\r\n      currTile.style.backgroundColor = \"yellow\";\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * delte projection of ship by turning the tiles the ship is projected upon\r\n * to lightblue again\r\n * @param {array} shipCoor array with x-y-coordinates for tiles that need to\r\n * change its color\r\n */\r\nconst deleteProjection = (shipCoor) => {\r\n  for (let i = 0; i < shipCoor.length; i++) {\r\n    // turn current [x,y] array into an id-string\r\n    let stringHelp = `x:${shipCoor[i][0]}y:${shipCoor[i][1]}`;\r\n    let currTile = document.getElementById(stringHelp);\r\n\r\n    if (currTile.classList.contains(\"ship\")) {\r\n      // if tile is occupied by ship\r\n    } else {\r\n      currTile.style.backgroundColor = \"lightblue\";\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * marks ship on gameboard -> turn tile black\r\n * @param {array} coor x-y-coordinates of starting pioint of ship\r\n * @param {int} length of ship\r\n */\r\nconst placeShipOnBoard = (coor, length) => {\r\n  // console.log(coor);\r\n  // calculate all coordinates the ship will occupy\r\n  const shipCoor = calculate(coor, length);\r\n\r\n  //console.log(shipCoor);\r\n  if (shipCoor === false) {\r\n    return;\r\n  } else {\r\n    for (let i = 0; i < shipCoor.length; i++) {\r\n      // turn current [x,y] array into a string containing the coordinates\r\n      let stringHelp = `x:${shipCoor[i][0]}y:${shipCoor[i][1]}`;\r\n      let currTile = document.getElementById(stringHelp);\r\n      // add ship class to prevent ships to be placed on the same tiles\r\n      currTile.classList.add(\"ship\");\r\n      currTile.style.backgroundColor = \"black\";\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {array or false} coorShip x-y-coordinates ship will occupy or false\r\n * if placement is illegal\r\n * @returns true if placement is legal\r\n */\r\nconst checkCollision = function (currCoor, lengthShip) {\r\n  // array containing\r\n  let tilesArray = [];\r\n  const coorShip = calculate(currCoor, lengthShip);\r\n\r\n  if (coorShip === false) {\r\n    // if coordinates are not legal due to gameboard restriction\r\n    return false;\r\n  }\r\n\r\n  // get all tiles with the passed coordinates\r\n  for (let i = 0; i < coorShip.length; i++) {\r\n    let currTile = document.getElementById(\r\n      `x:${coorShip[i][0]}y:${coorShip[i][1]}`\r\n    );\r\n    // push tile into array\r\n    tilesArray.push(currTile);\r\n  }\r\n\r\n  // check array for tiles containing ship\r\n  for (let i = 0; i < coorShip.length; i++) {\r\n    if (tilesArray[i].classList.contains(\"ship\")) {\r\n      // ship occupying tile\r\n      console.log(\"ship found\");\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * remove enventlisteners from tiles that are occupied by a ship\r\n * @param {array} coor starting coordinates for ship\r\n * @param {int} length of ship\r\n */\r\nconst removeEventsFromTiles = (coor, length) => {\r\n  //console.log(\"remove\");\r\n  const shipCoor = calculate(coor, length);\r\n  //console.log(shipCoor);\r\n  for (let i = 0; i < shipCoor.length; i++) {\r\n    //console.log(i);\r\n    // turn current [x,y] array into an id-string\r\n    let stringHelp = `x:${shipCoor[i][0]}y:${shipCoor[i][1]}`;\r\n    let currTile = document.getElementById(stringHelp);\r\n    //console.log(currTile);\r\n    currTile.removeEventListener(\"mouseenter\", eventProjection);\r\n    currTile.removeEventListener(\"mouseleave\", eventDeleteProjection);\r\n    currTile.removeEventListener(\"click\", eventPlaceShip);\r\n  }\r\n};\r\n\r\n/**\r\n * Same function as in gameboard.js i want it to be separete from the\r\n * objects since it is used for dom manipulation\r\n *\r\n * calculate all positions the ship will occupy\r\n * @param {array} startCoor containg x-y-coordinates of starting point of ship\r\n * @param {int} shipLength length of ship\r\n * @returns array with all the coordinates the ship occupies\r\n */\r\nconst calculate = function (startCoor, shipLength) {\r\n  //console.log(startCoor);\r\n  // array that contains all the coordinates the ship occupies\r\n  const shipCoor = [];\r\n  // calculate endpoint of ship that player wants to place\r\n  // check of all parts of the ship will be on the board\r\n  const endPointX = startCoor[0] + shipLength - 1;\r\n  const endPointY = startCoor[1] + shipLength - 1;\r\n  // check for illegal moves\r\n  if (playerBoard.placingDirection === \"inX\" && endPointX > 9) {\r\n    return false;\r\n  } else if (playerBoard.placingDirection === \"inY\" && endPointY > 9) {\r\n    return false;\r\n  } else if (playerBoard.placingDirection === \"inX\") {\r\n    // calculate all coordinates that ship will occupy in X-direction\r\n    for (let i = 0; i < shipLength; i++) {\r\n      let currCoor = [startCoor[0] + i, startCoor[1]];\r\n      shipCoor.push(currCoor);\r\n    }\r\n    //console.log(\"x\");\r\n    return shipCoor;\r\n  } else if (playerBoard.placingDirection === \"inY\") {\r\n    // calculate all coordinates that ship will occupy in Y-direction\r\n    for (let i = 0; i < shipLength; i++) {\r\n      let currCoor = [startCoor[0], startCoor[1] + i];\r\n      shipCoor.push(currCoor);\r\n    }\r\n    // console.log(\"shipCoor\");\r\n    // console.log(shipCoor);\r\n    return shipCoor;\r\n  }\r\n};\r\n\r\n/**\r\n * check if all shipt are placed\r\n * if all ships are placed remove all eventlisteners\r\n * @param {int} lenghtSipArr length of availableShipsArray\r\n */\r\nconst deletAllEvents = (lenghtSipArr) => {\r\n  //\r\n  if (lenghtSipArr === 0) {\r\n    const parent = document.getElementsByClassName(\"grid-container\");\r\n\r\n    for (const child of parent[0].children) {\r\n      child.removeEventListener(\"mouseenter\", eventProjection);\r\n      child.removeEventListener(\"mouseleave\", eventDeleteProjection);\r\n      child.removeEventListener(\"click\", eventPlaceShip);\r\n    }\r\n  }\r\n};\r\n\r\nexport {\r\n  crtNode,\r\n  crtTile,\r\n  getCoor,\r\n  projectingShip,\r\n  deleteProjection,\r\n  placeShipOnBoard,\r\n  removeEventsFromTiles,\r\n  checkCollision,\r\n  deletAllEvents,\r\n  crtTileGame,\r\n};\r\n","import Ship from \"./ships\";\r\n\r\nfunction Gameboard(owner) {\r\n  /** ----------------------------Properties ----------------------------- */\r\n  // array containing dummy objects that represent all the ships a player has\r\n  // whenever a player places a ship the first element of the array will be removed\r\n  this.availableShips = [\r\n    { name: \"Patrol Boat\", length: 2, direction: \"inX\" },\r\n    { name: \"Cruiser1\", length: 3, direction: \"inX\" },\r\n    { name: \"Cruiser2\", length: 3, direction: \"inX\" },\r\n    { name: \"Battleship\", length: 4, direction: \"inX\" },\r\n    { name: \"Carrier\", length: 5, direction: \"inX\" },\r\n  ];\r\n  // owner of board\r\n  this.owner = owner;\r\n  // placed ships\r\n  this.placedShips = [];\r\n  // default placing direction\r\n  this.placingDirection = \"inX\";\r\n  //\r\n  this.shotsMissed = [];\r\n  this.shotsHit = [];\r\n\r\n  /**\r\n   * places a ship on the gameboard starting from the coordinates a player clicked\r\n   * on\r\n   * @param {array} startCoor contians coordinates player clicked on\r\n   * return array with palced ships\r\n   */\r\n  this.placeShips = function (startCoor) {\r\n    // console.log(\"place ship\");\r\n    // create instance of ship\r\n    let currShip = new Ship(\r\n      this.availableShips[0].length,\r\n      this.availableShips[0].name\r\n    );\r\n    //   console.log(currShip.hit);\r\n    /**\r\n     * calculates the coordinates the ship occupies\r\n     * if a player clicks on a starting point that would place parts of the ship\r\n     * outside of the board calculate() returns a false\r\n     */\r\n    currShip.coordinates = this.calculate(startCoor, currShip.length);\r\n    // check for collision\r\n\r\n    // if ship placement is legal place ship and return array with all placed ships\r\n    // if ship placement is illegal reutrn false\r\n    if (currShip.coordinates !== false) {\r\n      this.availableShips.shift();\r\n      this.placedShips.push(currShip);\r\n      return this.placedShips;\r\n    } else if (currShip.coordinates === false) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * calculate all positions the ship will occupy\r\n   * @param {array} startCoor containg x-y-coordinates of starting point of ship\r\n   * @param {int} shipLength length of ship\r\n   * @returns array with all the coordinates the ship occupies\r\n   */\r\n  this.calculate = function (startCoor, shipLength) {\r\n    // console.log(startCoor);\r\n    // array that contains all the coordinates the ship occupies\r\n    const shipCoor = [];\r\n    // calculate endpoint of ship that player wants to place\r\n    // check if all parts of the ship will be on the board\r\n    const endPointX = startCoor[0] + shipLength - 1;\r\n    const endPointY = startCoor[1] + shipLength - 1;\r\n    // check for illegal moves -> part of ship outside of board\r\n    if (this.placingDirection === \"inX\" && endPointX > 9) {\r\n      return false;\r\n    } else if (this.placingDirection === \"inY\" && endPointY > 9) {\r\n      return false;\r\n    } else if (this.placingDirection === \"inX\") {\r\n      // calculate all coordinates that ship will occupy in X-direction\r\n      for (let i = 0; i < shipLength; i++) {\r\n        let currCoor = [startCoor[0] + i, startCoor[1]];\r\n        shipCoor.push(currCoor);\r\n      }\r\n      return shipCoor;\r\n    } else if (this.placingDirection === \"inY\") {\r\n      // calculate all coordinates that ship will occupy in Y-direction\r\n      for (let i = 0; i < shipLength; i++) {\r\n        let currCoor = [startCoor[0], startCoor[1] + i];\r\n        shipCoor.push(currCoor);\r\n      }\r\n      return shipCoor;\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {array} targetCoor x- and y-coordinates of tile that user fired on\r\n   * @returns ship object that got hit or null if no ship was hit\r\n   */\r\n  this.searchShips = function (targetCoor) {\r\n    for (let i = 0; i < this.placedShips.length; i++) {\r\n      // coordinate array of current ship object\r\n      let currCoor = this.placedShips[i].coordinates;\r\n      for (let j = 0; j < currCoor.length; j++) {\r\n        // if target hits\r\n        if (\r\n          currCoor[j][0] === targetCoor[0] &&\r\n          currCoor[j][1] === targetCoor[1]\r\n        ) {\r\n          // if target hits a ship return that ship\r\n          return this.placedShips[i];\r\n        }\r\n      }\r\n    }\r\n    // if shot misses\r\n    return null;\r\n  };\r\n\r\n  /**\r\n * delete ship that was destroyed from placedShip-array\r\n * @param {string} nameShip name of ship that was destroyed \r\n\r\n */\r\n  this.deleteShip = function (nameShip) {\r\n    for (let i = 0; i < this.placedShips.length; i++) {\r\n      if (this.placedShips[i].name === nameShip) {\r\n        this.placedShips.splice(i, 1);\r\n      }\r\n    }\r\n    return this.placedShips;\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {array} targetCoor x- and y- coordinates of tile that user fired on\r\n   * @returns true or false depending if ship got hit\r\n   */\r\n  this.receiveAttack = function (targetCoor) {\r\n    // search all placed ships for matching coordinates\r\n    let targetHit = this.searchShips(targetCoor);\r\n\r\n    if (targetHit === null) {\r\n      // shot missed\r\n      // mark tile in dom with an x\r\n      // push coordinates that missed into an array\r\n\r\n      //this.shotsMissed.push(targetCoor);\r\n\r\n      return false;\r\n    } else {\r\n      // shot hit\r\n      //this.shotsHit.push(targetCoor);\r\n      // mark tile in dom\r\n\r\n      targetHit.hit();\r\n      targetHit.sunk();\r\n      if (targetHit.isSunk === true) {\r\n        // delete ship from placedShip array\r\n        this.deleteShip(targetHit.name);\r\n      }\r\n    }\r\n\r\n    if (this.placedShips.length === 0) {\r\n      // end game\r\n      return \"gameover player wins\";\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * change placing direction\r\n   */\r\n  this.changePlacingDirection = function () {\r\n    if (this.placingDirection === \"inX\") {\r\n      this.placingDirection = \"inY\";\r\n    } else if (this.placingDirection === \"inY\") {\r\n      this.placingDirection = \"inX\";\r\n    }\r\n    console.log(\"rotateShip\");\r\n  };\r\n\r\n  /**\r\n   * reset Gameboard so palyer can replace his ships\r\n   */\r\n  this.resetGameboard = function () {\r\n    this.availableShips = [\r\n      { name: \"Patrol Boat\", length: 2, direction: \"inX\" },\r\n      { name: \"Cruiser1\", length: 3, direction: \"inX\" },\r\n      { name: \"Cruiser2\", length: 3, direction: \"inX\" },\r\n      { name: \"Battleship\", length: 4, direction: \"inX\" },\r\n      { name: \"Carrier\", length: 5, direction: \"inX\" },\r\n    ];\r\n    this.placedShips.length = 0;\r\n    this.placingDirection = \"inX\";\r\n  };\r\n\r\n  /**\r\n   * creat three arrays with 5 ship objects with hard coded coordinates\r\n   * and push them into an array\r\n   * randomly select one of the three arrays and return it\r\n   * the array is supposed to be saved to this.placedShips\r\n   * @returns array with 5 ship objects\r\n   */\r\n\r\n  this.aiShipPlacement = function () {\r\n    // array that will hold different placesShips array\r\n    let globalArr = [];\r\n    const placement1 = this.aiPlacedShips1();\r\n    globalArr.push(placement1);\r\n    const placement2 = this.aiPlacedShips2();\r\n    globalArr.push(placement2);\r\n    const placement3 = this.aiPlacedShips3();\r\n    globalArr.push(placement3);\r\n\r\n    const randNum = Math.floor(Math.random() * 3);\r\n    return globalArr[randNum];\r\n  };\r\n\r\n  /** -----------------------Utility functions for shipplacement--------------- */\r\n\r\n  /**\r\n   * hardcoded ship placement 1\r\n   * @returns array with ship objects\r\n   */\r\n  this.aiPlacedShips1 = function () {\r\n    let shipsArr = [];\r\n    let patrolBoat = new Ship(2, \"Patrol Boat\");\r\n    patrolBoat.coordinates = [\r\n      [6, 0],\r\n      [6, 1],\r\n    ];\r\n    shipsArr.push(patrolBoat);\r\n\r\n    let cruiser1 = new Ship(3, \"Cruiser1\");\r\n    cruiser1.coordinates = [\r\n      [1, 5],\r\n      [2, 5],\r\n      [3, 5],\r\n    ];\r\n    shipsArr.push(cruiser1);\r\n\r\n    let cruiser2 = new Ship(3, \"Cruiser2\");\r\n    cruiser2.coordinates = [\r\n      [6, 7],\r\n      [7, 7],\r\n      [8, 7],\r\n    ];\r\n    shipsArr.push(cruiser2);\r\n\r\n    let battleship = new Ship(4, \"Battleship\");\r\n    battleship.coordinates = [\r\n      [1, 2],\r\n      [2, 2],\r\n      [3, 2],\r\n      [4, 2],\r\n    ];\r\n    shipsArr.push(battleship);\r\n\r\n    let carrier = new Ship(5, \"Carrier\");\r\n    carrier.coordinates = [\r\n      [0, 8],\r\n      [1, 8],\r\n      [2, 8],\r\n      [3, 8],\r\n      [4, 8],\r\n    ];\r\n    shipsArr.push(carrier);\r\n    return shipsArr;\r\n  };\r\n\r\n  /**\r\n   * hardcoded ship placement 1\r\n   * @returns array with ship objects\r\n   */\r\n  this.aiPlacedShips2 = function () {\r\n    let shipsArr = [];\r\n    let patrolBoat = new Ship(2, \"Patrol Boat\");\r\n    patrolBoat.coordinates = [\r\n      [0, 0],\r\n      [1, 0],\r\n    ];\r\n    shipsArr.push(patrolBoat);\r\n\r\n    let cruiser1 = new Ship(3, \"Cruiser1\");\r\n    cruiser1.coordinates = [\r\n      [5, 1],\r\n      [6, 1],\r\n      [7, 1],\r\n    ];\r\n    shipsArr.push(cruiser1);\r\n\r\n    let cruiser2 = new Ship(3, \"Cruiser2\");\r\n    cruiser2.coordinates = [\r\n      [5, 7],\r\n      [5, 8],\r\n      [5, 9],\r\n    ];\r\n    shipsArr.push(cruiser2);\r\n\r\n    let battleship = new Ship(4, \"Battleship\");\r\n    battleship.coordinates = [\r\n      [2, 3],\r\n      [2, 4],\r\n      [2, 5],\r\n      [2, 6],\r\n    ];\r\n    shipsArr.push(battleship);\r\n\r\n    let carrier = new Ship(5, \"Carrier\");\r\n    carrier.coordinates = [\r\n      [8, 5],\r\n      [8, 6],\r\n      [8, 7],\r\n      [8, 8],\r\n      [8, 9],\r\n    ];\r\n    shipsArr.push(carrier);\r\n    // console.log(shipsArr);\r\n    return shipsArr;\r\n  };\r\n\r\n  /**\r\n   * hardcoded ship placement 1\r\n   * @returns array with ship objects\r\n   */\r\n  this.aiPlacedShips3 = function () {\r\n    let shipsArr = [];\r\n    let patrolBoat = new Ship(2, \"Patrol Boat\");\r\n    patrolBoat.coordinates = [\r\n      [3, 0],\r\n      [3, 1],\r\n    ];\r\n    shipsArr.push(patrolBoat);\r\n\r\n    let cruiser1 = new Ship(3, \"Cruiser1\");\r\n    cruiser1.coordinates = [\r\n      [4, 4],\r\n      [4, 5],\r\n      [4, 6],\r\n    ];\r\n    shipsArr.push(cruiser1);\r\n\r\n    let cruiser2 = new Ship(3, \"Cruiser2\");\r\n    cruiser2.coordinates = [\r\n      [0, 9],\r\n      [1, 9],\r\n      [2, 9],\r\n    ];\r\n    shipsArr.push(cruiser2);\r\n\r\n    let battleship = new Ship(4, \"Battleship\");\r\n    battleship.coordinates = [\r\n      [4, 2],\r\n      [5, 2],\r\n      [6, 2],\r\n      [7, 2],\r\n    ];\r\n    shipsArr.push(battleship);\r\n\r\n    let carrier = new Ship(5, \"Carrier\");\r\n    carrier.coordinates = [\r\n      [9, 0],\r\n      [9, 1],\r\n      [9, 2],\r\n      [9, 3],\r\n      [9, 4],\r\n    ];\r\n    shipsArr.push(carrier);\r\n    // console.log(shipsArr);\r\n    return shipsArr;\r\n  };\r\n\r\n  /**\r\n   *create a random direction\r\n   * @returns \"inX\" or \"inY\"\r\n   */\r\n  // this.randomDirection = function () {\r\n  //   let directionArr = [\"inX\", \"inY\"];\r\n  //   let ranNumber = Math.floor(Math.random() * 2);\r\n\r\n  //   return directionArr[ranNumber];\r\n  // };\r\n\r\n  /**\r\n   *\r\n   * @param {int} max upper border\r\n   * @returns int between 0 and max excluding max\r\n   */\r\n  // this.getRandomInt = function (max) {\r\n  //   return Math.floor(Math.random() * max);\r\n  // };\r\n\r\n  // this.randomShips = function () {\r\n  //   let initDirection = this.randomDirection();\r\n  //   // create random number between 0 and 10 excluding 10\r\n  //   let initRandX = this.getRandomInt(10);\r\n  //   let initRandY = this.getRandomInt(10);\r\n  //   console.log(initRandX);\r\n  //   console.log(initRandY);\r\n  //   // create patrol boat\r\n  //   let shipStr = this.randomPatrolBoat(initRandX, initRandY, initDirection);\r\n  //   console.log(shipStr);\r\n\r\n  //   let counter = shipStr.length;\r\n  //   console.log(counter);\r\n\r\n  // while (counter <= 32) {\r\n  //   // create randomd irection\r\n  //   let direction = this.randomDirection();\r\n  //   let randX = this.getRandomInt(10);\r\n  //   let randY = this.getRandomInt(10);\r\n\r\n  //   // make sure ship stay on board by calculating endpoint\r\n\r\n  //   // create cruiser 1\r\n  //   if (shipStr.length === 8) {\r\n  //     let cruiser1 = this.randomCruiser(randX, randY, direction, shipStr);\r\n  //     if (cruiser1 === false) {\r\n  //       counter = shipStr.length;\r\n  //       continue;\r\n  //     } else {\r\n  //       shipStr += cruiser1;\r\n  //       console.log(shipStr);\r\n  //       console.log(shipStr.length);\r\n  //     }\r\n  //   }\r\n\r\n  //   if (shipStr.length === 20) {\r\n  //     let cruiser2 = this.randomCruiser(randX, randY, direction, shipStr);\r\n  //     if (cruiser2 === false) {\r\n  //       counter = shipStr.length;\r\n  //       continue;\r\n  //     } else {\r\n  //       shipStr += cruiser2;\r\n  //       console.log(shipStr);\r\n  //     }\r\n  //   }\r\n\r\n  //   counter = shipStr.length;\r\n  // }\r\n  // };\r\n\r\n  /**\r\n   * create a string containing the coordinates of a patrol boat\r\n   * @param {int} coorX x-coordinate\r\n   * @param {int} coorY y-coordinate\r\n   * @param {str} direction \"inY\" or \"inX\"\r\n   * @returns string containing coordinates of patrol boat\r\n   */\r\n  // this.randomPatrolBoat = function (coorX, coorY, direction) {\r\n  //   if (direction === \"inX\") {\r\n  //     return `x${coorX}y${coorY}x${coorX + 1}y${coorY}`;\r\n  //   } else if (direction === \"inY\") {\r\n  //     return `x${coorX}y${coorY}x${coorX}y${coorY + 1}`;\r\n  //   }\r\n  // };\r\n\r\n  /**\r\n   * create a string containing the coordinates of a cruiser\r\n   * @param {int} coorX x-coordinate\r\n   * @param {int} coorY y-coordinate\r\n   * @param {str} direction \"inX\" or \"inY\"\r\n   * @param {str} shipStrCoor string containing all the valid coordinates\r\n   * @returns return string containing the coordinates of a cruiser or false\r\n   * if coordinates are already taken by another ship\r\n   */\r\n  // this.randomCruiser = function (coorX, coorY, direction, shipStrCoor) {\r\n  //   // create cruiser 1\r\n\r\n  //   let currStr1 = \"\";\r\n  //   let currStr2 = \"\";\r\n  //   let currStr3 = \"\";\r\n  //   if (direction === \"inX\") {\r\n  //     currStr1 = `x${coorX}y${coorY}`;\r\n  //     if (shipStrCoor.includes(currStr1)) {\r\n  //       return false;\r\n  //     }\r\n\r\n  //     currStr2 = `x${coorX + 1}y${coorY}`;\r\n  //     if (shipStrCoor.includes(currStr2)) {\r\n  //       return false;\r\n  //     }\r\n\r\n  //     currStr3 = `x${coorX + 2}y${coorY}`;\r\n  //     if (shipStrCoor.includes(currStr3)) {\r\n  //       return false;\r\n  //     }\r\n\r\n  //     return currStr1 + currStr2 + currStr3;\r\n  //   }\r\n  //   if (direction === \"inY\") {\r\n  //     currStr1 = `x${coorX}y${coorY}`;\r\n  //     if (shipStrCoor.includes(currStr1)) {\r\n  //       return false;\r\n  //     }\r\n\r\n  //     currStr2 = `x${coorX}y${coorY + 1}`;\r\n  //     if (shipStrCoor.includes(currStr2)) {\r\n  //       return false;\r\n  //     }\r\n\r\n  //     currStr3 = `x${coorX}y${coorY + 2}`;\r\n  //     if (shipStrCoor.includes(currStr3)) {\r\n  //       return false;\r\n  //     }\r\n\r\n  //     return currStr1 + currStr2 + currStr3;\r\n  //   }\r\n  // };\r\n}\r\n\r\nexport default Gameboard;\r\n\r\n/** ---------------------------------- METHODS ------------------------------ */\r\n// const testAiGamebaord = new Gameboard();\r\n// testAiGamebaord.availableShips.length = 0;\r\n// testAiGamebaord.placedShips = testAiGamebaord.aiShipPlacement();\r\n// const golbArr = testAiGamebaord.aiShipPlacement();\r\n// console.log(testAiGamebaord);\r\n// console.log(golbArr);\r\n","import \"./styles.css\";\r\nimport screenStart from \"./screenStart\";\r\nimport screenPlacing from \"./screenPlacing\";\r\nimport Gameboard from \"./gameboard\";\r\nimport screenGameplay from \"./screenGameplay\";\r\n\r\n// --------------------- initilize objects --------------------------\r\n// create gameboard for player\r\nconst playerBoard = new Gameboard(\"player\");\r\n// create gameboard for ai\r\nconst aiBoard = new Gameboard(\"ai\");\r\naiBoard.availableShips.length = 0;\r\naiBoard.placedShips = aiBoard.aiShipPlacement(); //\r\n// create gameflow object\r\n// control game flow by switching turn from \"player\" to \"ai\"\r\nconst gameflow = {\r\n  //\r\n  turn: \"player\",\r\n};\r\n\r\n// console.log(aiBoard.availableShips);\r\nscreenStart();\r\n/* screenPlacing();\r\nscreenGameplay(); */\r\n\r\n// create ship objects for placement\r\n\r\nexport { playerBoard, aiBoard };\r\n","import { playerBoard, aiBoard } from \".\";\r\nimport { crtNode, crtTile, crtTileGame } from \"./domHelper\";\r\nimport screenPlacing from \"./screenPlacing\";\r\n\r\n/**\r\n * create screen for gamepaly\r\n * create two grids\r\n * 1. grid:\r\n *  - represent gameboard of player\r\n *  - the positions of the players ships are shown\r\n *  - the missed shots from enemy player are shown\r\n * 2. grid:\r\n *  - represent gameboard of ai\r\n *  - the positions of the ai's ships are shown\r\n *  - the missed shots from enemy player are shown\r\n *\r\n */\r\nconst screenGameplay = () => {\r\n  console.log(playerBoard);\r\n  console.log(aiBoard);\r\n\r\n  // create content container\r\n  const contentContainer = crtNode(\"#body\", \"div\", \"content-gameplay\");\r\n  contentContainer.setAttribute(\"id\", \"content-container\");\r\n  // create container for player interface\r\n  const playerGrid = crtNode(\r\n    \".content-gameplay\",\r\n    \"div\",\r\n    \"grid-container-player\"\r\n  );\r\n\r\n  // create name plate for palyer\r\n  const playerNamePlate = crtNode(\r\n    \".content-gameplay\",\r\n    \"div\",\r\n    \"player-name-plate\"\r\n  );\r\n\r\n  // create name plate for ai\r\n  playerNamePlate.textContent = \"Player\";\r\n  createTilesPlayer(\"player\", 1);\r\n  placeShipsDomPlayer();\r\n\r\n  // create ai interface\r\n  const playerAi = crtNode(\".content-gameplay\", \"div\", \"grid-container-ai\");\r\n  const aiNamePlate = crtNode(\".content-gameplay\", \"div\", \"ai-name-plate\");\r\n  aiNamePlate.textContent = \"A.I.\";\r\n  createTilesAi(\"ai\", 2);\r\n  placeShipsDomAi();\r\n};\r\n\r\n/**\r\n * create tiles for the grid of  the ai\r\n * pass owner und correesponfing number\r\n * @param {string} nameOwner name of owner of tiles -> player or tile\r\n * @param {int} numOwner number corresponding to  tiles in dom\r\n */\r\nconst createTilesPlayer = (nameOwner, numOwner) => {\r\n  // create a 10x10 x-y-grid using two loops to calculate the coordinates for\r\n  // each tile\r\n  for (let j = 0; j < 10; j++) {\r\n    for (let k = 0; k < 10; k++) {\r\n      let currTile = crtTileGame(\r\n        `.grid-container-${nameOwner}`,\r\n        \"div\",\r\n        `x${numOwner}:${j}y${numOwner}:${k}`,\r\n        `tile-${nameOwner}`\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * create tiles for the grid of  the ai\r\n * pass owner und correesponfing number\r\n * @param {string} nameOwner name of owner of tiles -> player or tile\r\n */\r\nconst createTilesAi = (nameOwner, numOwner) => {\r\n  // create a 10x10 x-y-grid using two loops to calculate the coordinates for\r\n  // each tile\r\n  for (let j = 0; j < 10; j++) {\r\n    for (let k = 0; k < 10; k++) {\r\n      let currTile = crtTileGame(\r\n        `.grid-container-${nameOwner}`,\r\n        \"div\",\r\n        `x${numOwner}:${j}y${numOwner}:${k}`,\r\n        `tile-${nameOwner}`\r\n      );\r\n\r\n      // fireShot\r\n      currTile.addEventListener(\"click\", fireShot);\r\n    }\r\n  }\r\n};\r\n\r\nfunction fireShot(e) {\r\n  // extract coordinates from string\r\n  let coorString = e.target.classList[0];\r\n\r\n  const allContentCon = document.getElementById(\"content-container\");\r\n\r\n  let winnerBtn = null;\r\n  let replayBtn = null;\r\n\r\n  let coorArr = [parseInt(coorString[3]), parseInt(coorString[7])];\r\n\r\n  // check if coordinate is occupied by a ship\r\n  let hit = aiBoard.receiveAttack(coorArr);\r\n  // console.log(hit);\r\n  if (hit === true) {\r\n    // mark hit on dom\r\n    e.target.style.backgroundColor = \"red\";\r\n  } else if (hit === false) {\r\n    // mark miss on dom\r\n    e.target.style.backgroundColor = \"blue\";\r\n  } else if (hit === \"gameover player wins\") {\r\n    console.log(\"gameover player wins\");\r\n    e.target.style.backgroundColor = \"red\";\r\n    // create winner message\r\n    winnerBtn = crtNode(\".content-gameplay\", \"div\", \"btn-winner\");\r\n    winnerBtn.textContent = \"YOU WIN\";\r\n\r\n    replayBtn = crtNode(\".content-gameplay\", \"button\", \"btn-replay\");\r\n    replayBtn.textContent = \"Replay\";\r\n\r\n    replayBtn.addEventListener(\"click\", () => {\r\n      // delete start screen\r\n      allContentCon.remove();\r\n      // create placing screen\r\n      screenPlacing();\r\n      playerBoard.resetGameboard();\r\n      aiBoard.availableShips.length = 0;\r\n      aiBoard.placedShips = aiBoard.aiShipPlacement(); //\r\n    });\r\n\r\n    deletAllEventsGameplayScreen();\r\n  }\r\n  // remove eventlistener\r\n  e.target.removeEventListener(\"click\", fireShot);\r\n\r\n  /** ------------------- ai attack------------------------- */\r\n  const aiAttackCoor = randomAiAttack();\r\n  // aiBoard.shotsMissed.push(aiAttackCoor);\r\n\r\n  // turn coordinates array into coordinate string class name\r\n  const coorStr = `x1:${aiAttackCoor[0]}y1:${aiAttackCoor[1]}`;\r\n\r\n  let hitAi = playerBoard.receiveAttack(aiAttackCoor);\r\n\r\n  let tileAttckPlayerGrid = document.getElementsByClassName(coorStr);\r\n\r\n  if (hitAi === true) {\r\n    tileAttckPlayerGrid[0].style.backgroundColor = \"red\";\r\n  } else if (hitAi === false) {\r\n    tileAttckPlayerGrid[0].style.backgroundColor = \"blue\";\r\n  } else if (hit === \"gameover ai wins\") {\r\n    tileAttckPlayerGrid[0].style.backgroundColor = \"red\";\r\n    winnerBtn = crtNode(\".content-gameplay\", \"div\", \"btn-winner\");\r\n    winnerBtn.textContent = \"YOU LOOSE\";\r\n\r\n    replayBtn = crtNode(\".content-gameplay\", \"button\", \"btn-replay\");\r\n    replayBtn.textContent = \"Replay\";\r\n\r\n    replayBtn.addEventListener(\"click\", () => {\r\n      // delete start screen\r\n      allContentCon.remove();\r\n      // create placing screen\r\n      screenPlacing();\r\n      playerBoard.resetGameboard();\r\n      aiBoard.availableShips.length = 0;\r\n      aiBoard.placedShips = aiBoard.aiShipPlacement(); //\r\n    });\r\n\r\n    deletAllEventsGameplayScreen();\r\n  }\r\n}\r\n\r\n/**\r\n * attack player at random coordinate\r\n * @returns array with x-y-coordinate where the ai wants to attack\r\n */\r\nconst randomAiAttack = () => {\r\n  let randX = Math.floor(Math.random() * 10);\r\n  let randY = Math.floor(Math.random() * 10);\r\n\r\n  let coorArr = [randX, randY];\r\n\r\n  return coorArr;\r\n};\r\n\r\n/**\r\n * check if all shipt are placed\r\n * if all ships are placed remove all eventlisteners\r\n * @param {int} lenghtSipArr length of availableShipsArray\r\n */\r\nconst deletAllEventsGameplayScreen = () => {\r\n  //\r\n\r\n  const parent = document.getElementsByClassName(\"grid-container-ai\");\r\n\r\n  for (const child of parent[0].children) {\r\n    child.removeEventListener(\"click\", fireShot);\r\n  }\r\n};\r\n\r\n/**\r\n *place ships of player in dom\r\n */\r\nconst placeShipsDomPlayer = () => {\r\n  const placedShipsArr = playerBoard.placedShips;\r\n  // console.log(placedShipsArr);\r\n  for (let i = 0; i < placedShipsArr.length; i++) {\r\n    const currShipArr = playerBoard.placedShips[i].coordinates;\r\n    // console.log(playerBoard.placedShips[i].coordinates);\r\n    for (let j = 0; j < currShipArr.length; j++) {\r\n      // console.log(playerBoard.placedShips[i].coordinates[j]);\r\n\r\n      let stringHelp = `x1:${currShipArr[j][0]}y1:${currShipArr[j][1]}`;\r\n      let currTile = document.getElementsByClassName(stringHelp);\r\n      currTile[0].classList.add(\"ship\");\r\n      currTile[0].style.backgroundColor = \"black\";\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * place ships of ai in dom\r\n * only for testing purposes\r\n * I do not want the palyer to see the ships\r\n */\r\n/* const placeShipsDomAi = () => {\r\n  const placedShipsArr = aiBoard.placedShips;\r\n  // console.log(placedShipsArr);\r\n  for (let i = 0; i < placedShipsArr.length; i++) {\r\n    const currShipArr = aiBoard.placedShips[i].coordinates;\r\n    // console.log(playerBoard.placedShips[i].coordinates);\r\n    for (let j = 0; j < currShipArr.length; j++) {\r\n      // console.log(playerBoard.placedShips[i].coordinates[j]);\r\n\r\n      let stringHelp = `x2:${currShipArr[j][0]}y2:${currShipArr[j][1]}`;\r\n      let currTile = document.getElementsByClassName(stringHelp);\r\n      currTile[0].classList.add(\"ship\");\r\n      currTile[0].style.backgroundColor = \"black\";\r\n      // give tile name of ship\r\n      currTile[0].setAttribute(\"id\", aiBoard.placedShips[i].name);\r\n    }\r\n  }\r\n}; */\r\n\r\nexport default screenGameplay;\r\n","import {\r\n  crtNode,\r\n  crtTile,\r\n  getCoor,\r\n  projectingShip,\r\n  deleteProjection,\r\n  placeShipOnBoard,\r\n  removeEventsFromTiles,\r\n  checkCollision,\r\n  deletAllEvents,\r\n} from \"./domHelper\";\r\nimport { playerBoard } from \"./index\";\r\n\r\n/**\r\n * create a 10x10 grid using x-y-coordinates\r\n */\r\nconst grid = () => {\r\n  // create grid-container\r\n  const gridDom = crtNode(\".content\", \"div\", \"grid-container\");\r\n\r\n  // create a 10x10 x-y-grid using two loops to calculate the coordinates for\r\n  // each tile\r\n  for (let j = 0; j < 10; j++) {\r\n    for (let k = 0; k < 10; k++) {\r\n      let currTile = crtTile(\".grid-container\", \"div\", `x:${j}y:${k}`, \"tile\");\r\n\r\n      // create projection of ship\r\n      currTile.addEventListener(\"mouseenter\", eventProjection);\r\n\r\n      // delete projection of ship\r\n      currTile.addEventListener(\"mouseleave\", eventDeleteProjection);\r\n\r\n      // place ship by clicking\r\n      currTile.addEventListener(\"click\", eventPlaceShip);\r\n    }\r\n  }\r\n};\r\n\r\nfunction eventPlaceShip(e) {\r\n  //console.log(event.target);\r\n  // get string that contains the coordinates of the tile the player clicked on\r\n  // clicked tile is the starting point of the\r\n  const currCoor = getCoor(e.target.id);\r\n\r\n  // save length of current ship before it gets deleted from available ships\r\n  //array when using playerBoard.placeShips()\r\n  let currLengthShip = playerBoard.availableShips[0].length;\r\n\r\n  const checkingCollision = checkCollision(currCoor, currLengthShip);\r\n  if (checkingCollision === false) {\r\n    return;\r\n  }\r\n  // mark ships on dom and call  playerBoard.placeShips(currCoor);\r\n  placeShipOnBoard(currCoor, playerBoard.availableShips[0].length);\r\n\r\n  // place ship in gameboard object\r\n  playerBoard.placeShips(currCoor);\r\n  //\r\n  //console.log(e.target);\r\n  removeEventsFromTiles(currCoor, currLengthShip);\r\n\r\n  const lengthAvailableShip = playerBoard.availableShips.length;\r\n\r\n  // console.log(lengthAvailableShip);\r\n  // if all ships are placed remove all eventlisteners\r\n  deletAllEvents(lengthAvailableShip);\r\n}\r\n\r\nfunction eventDeleteProjection(e) {\r\n  // console.log(event.target.id);\r\n  // get coordinates mouse is hovering over from the tile's id\r\n  // turn the string into an array [x,y]\r\n  const currCoor = getCoor(e.target.id);\r\n  // calculate the coordinates of the tiles the ship is going to occupy\r\n  const shipCoor = playerBoard.calculate(\r\n    currCoor,\r\n    playerBoard.availableShips[0].length\r\n  );\r\n  deleteProjection(shipCoor);\r\n}\r\n\r\nfunction eventProjection(e) {\r\n  // console.log(\"hovber\");\r\n\r\n  // get coordinates mouse is hovering over from the tile's id\r\n  // turn the string into an array [x,y]\r\n  const currCoor = getCoor(e.target.id);\r\n  // console.log(currCoor);\r\n\r\n  // calculate the coordinates of the tiles the ship is going to occupy\r\n  const shipCoor = playerBoard.calculate(\r\n    currCoor,\r\n    playerBoard.availableShips[0].length\r\n  );\r\n\r\n  // console.log(shipCoor);\r\n  // change color of tiles the ship is going to occupy if player clicks\r\n  // tile the mouse is hovering over\r\n  projectingShip(shipCoor);\r\n}\r\n\r\nexport { grid, eventProjection, eventDeleteProjection, eventPlaceShip };\r\n","import { crtNode } from \"./domHelper\";\r\nimport Gameboard from \"./gameboard\";\r\nimport { playerBoard } from \"./index\";\r\nimport crtSidebar from \"./screenSidebar\";\r\nimport { grid } from \"./screenGrid\";\r\nimport screenGameplay from \"./screenGameplay\";\r\n\r\n/**\r\n * GAME PHASE\r\n * create placing screen\r\n * player is supposed to palce his ships during this phase of the game\r\n */\r\nconst screenPlacing = () => {\r\n  // console.log(playerBoard);\r\n  // create content container\r\n  const contentContainer = crtNode(\"#body\", \"div\", \"content\");\r\n  // create placing grid\r\n  //   const placingGrid = crtNode(\".content\", \"div\", \"placing-grid\");\r\n  grid();\r\n\r\n  // create sidebar and display all available ships\r\n  crtSidebar();\r\n\r\n  // create rotate button\r\n  const rotateBtn = crtNode(\".content\", \"button\", \"btn-rotate\");\r\n  rotateBtn.textContent = \"Rotate Ship\";\r\n\r\n  rotateBtn.addEventListener(\"click\", () => {\r\n    playerBoard.changePlacingDirection();\r\n    console.log(playerBoard);\r\n  });\r\n\r\n  // create reset button\r\n  const resetBtn = crtNode(\".content\", \"button\", \"btn-reset\");\r\n  resetBtn.textContent = \"Reset\";\r\n\r\n  resetBtn.addEventListener(\"click\", () => {\r\n    //cons\r\n    playerBoard.resetGameboard();\r\n    // delete placing screen\r\n    contentContainer.remove();\r\n    // create placing screen\r\n    screenPlacing();\r\n  });\r\n\r\n  // create start game button\r\n  const startGame = crtNode(\".content\", \"button\", \"btn-start-game\");\r\n  startGame.textContent = \"Start Game\";\r\n\r\n  startGame.addEventListener(\"click\", () => {\r\n    if (playerBoard.placedShips.length === 5) {\r\n      // delete placing screen\r\n      contentContainer.remove();\r\n      // create gameplay screen\r\n      screenGameplay();\r\n    }\r\n  });\r\n};\r\n\r\nexport default screenPlacing;\r\n","import { crtNode } from \"./domHelper\";\r\n\r\n/**\r\n * create the sidebar for the placing screen with all the available ships\r\n */\r\nconst crtSidebar = () => {\r\n  // create sidebar\r\n  const sidebar = crtNode(\".content\", \"div\", \"sidebar\");\r\n\r\n  // create boats\r\n  const patrolBoatHeader = crtNode(\".sidebar\", \"div\", \"patrol-boat-header\");\r\n  patrolBoatHeader.textContent = \"Patrol Boat\";\r\n  const patrolBoat = crtNode(\".sidebar\", \"div\", \"patrol-boat\");\r\n\r\n  const cruiser1Header = crtNode(\".sidebar\", \"div\", \"cruiser-1-header\");\r\n  cruiser1Header.textContent = \"Cruiser 1\";\r\n  const cruiser1 = crtNode(\".sidebar\", \"div\", \"cruiser-1\");\r\n\r\n  const cruiser2Header = crtNode(\".sidebar\", \"div\", \"cruiser-2-header\");\r\n  cruiser2Header.textContent = \"Cruiser 2\";\r\n  const cruiser2 = crtNode(\".sidebar\", \"div\", \"cruiser-2\");\r\n\r\n  const battleshipHeader = crtNode(\".sidebar\", \"div\", \"battleship-header\");\r\n  battleshipHeader.textContent = \"Battleship\";\r\n  const battleship = crtNode(\".sidebar\", \"div\", \"battleship\");\r\n\r\n  const carrierHeader = crtNode(\".sidebar\", \"div\", \"carrier-header\");\r\n  carrierHeader.textContent = \"Carrier\";\r\n  const carrier = crtNode(\".sidebar\", \"div\", \"carrier\");\r\n};\r\n\r\nexport default crtSidebar;\r\n","import { crtNode } from \"./domHelper\";\r\nimport screenPlacing from \"./screenPlacing\";\r\nimport Gameboard from \"./gameboard\";\r\n\r\n/**\r\n * create starting screen\r\n */\r\nconst screenStart = () => {\r\n  // create content container\r\n  const contentContainer = crtNode(\"#body\", \"div\", \"content\");\r\n  // create header\r\n  const header = crtNode(\".content\", \"div\", \"header\");\r\n  header.textContent = \"Battleship\";\r\n\r\n  // player board\r\n  const adversariesBoard = crtNode(\".content\", \"div\", \"adversaries\");\r\n  adversariesBoard.textContent = \"Player vs. A.I.\";\r\n  // create button\r\n  const startBtn = crtNode(\".content\", \"button\", \"btn-start\");\r\n  startBtn.textContent = \"Start Game\";\r\n\r\n  startBtn.addEventListener(\"click\", () => {\r\n    // delete start screen\r\n    contentContainer.remove();\r\n    // create placing screen\r\n    screenPlacing();\r\n  });\r\n};\r\n\r\nexport default screenStart;\r\n","import { Gameboard } from \"./gameboard\";\r\n\r\n// Exporting the constructor function did not export the pbject methods need some fix\r\n\r\n/**\r\n * create a ship and pass its length\r\n * @param {integer} length of ship\r\n */\r\nfunction Ship(length, name) {\r\n  this.length = length;\r\n  this.isSunk = false;\r\n  this.hitCount = 0;\r\n  this.direction = \"inX\";\r\n  this.coordinates = null;\r\n  this.name = name;\r\n\r\n  this.hit = function () {\r\n    this.hitCount = this.hitCount + 1;\r\n  };\r\n  this.sunk = function () {\r\n    if (this.hitCount >= this.length) {\r\n      this.isSunk = true;\r\n    }\r\n  };\r\n}\r\nexport default Ship;\r\n/** ------------- I COULD NOT MAKE DEFINING FUNCTIONS ON PROTOTYPE WORK -------*/\r\n\r\n// /**\r\n//  * increase hitcount\r\n//  */\r\n// Ship.prototype.hit = function () {\r\n//   this.hitCount = this.hitCount + 1;\r\n// };\r\n\r\n// /**\r\n//  * checks if boat has sunk\r\n//  */\r\n// Ship.prototype.sunk = function () {\r\n//   if (this.hitCount >= this.length) {\r\n//     this.isSunk = true;\r\n//   }\r\n// };\r\n\r\n// ---------------- TEST ----------------------\r\n\r\n// let testShip = new Ship(2);\r\n// console.log(testShip.hit);\r\n\r\n// let testGameboard = new Gameboard();\r\n// let test = testGameboard.calculate([1, 3], 2);\r\n// console.log(test);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":[],"sourceRoot":""}